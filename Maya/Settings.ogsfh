/**
 * Uniform shader settings
 */
#ifndef _SETTINGS_OGSFH_
#define _SETTINGS_OGSFH_

// ---------------------------------------------
// Color Group
// ---------------------------------------------
uniform vec3 u_Diffuse : DIFFUSE
<
    string UIName = "Diffuse";
    string UIGroup = "Color";
    string UIWidget = "Color";
> = {1, 0, 0};

// ---------------------------------------------
// Silhouette/Crease Group
// ---------------------------------------------
uniform vec3 u_OutlineColor : DIFFUSE
<
    string UIName = "Color";
    string UIGroup = "Outline";
    string UIWidget = "Color";
> = {1, 1, 1};

uniform float u_OutlineScale
<
    string UIName = "Scale";
    string UIGroup = "Outline";
> = 1.0;

// ---------------------------------------------
// Debug Group
// ---------------------------------------------
// uniform bool u_Debug
// <
//     string UIName = "Debug Mode";
//     string UIGroup = "Debug";
// > = false;

uniform bool u_SilhouetteOnly
<
    string UIName = "Silhouette Only";
    string UIGroup = "Debug";
> = false;

// ---------------------------------------------
// Light 0 Group
// ---------------------------------------------
uniform bool light0Enable : LIGHTENABLE
<
	string Object = "Light 0";
	string UIName = "Enable Light 0";
	int UIOrder = 20;
> = false;

uniform int light0Type : LIGHTTYPE
<
	string Object = "Light 0";
	string UIName = "Light 0 Type";
	string UIFieldNames ="None:Default:Spot:Point:Directional:Ambient";
	int UIOrder = 21;
	float UIMin = 0;
	float UIMax = 5;
	float UIStep = 1;
> = 3;

uniform vec3 light0Pos : POSITION 
< 
	string Object = "Light 0";
	string UIName = "Light 0 Position"; 
	string Space = "World"; 
	int UIOrder = 22;
> = {100.0f, 100.0f, 100.0f}; 

uniform vec3 light0Color : LIGHTCOLOR 
<
	string Object = "Light 0";
	string UIName = "Light 0 Color"; 
	string UIWidget = "Color"; 
	int UIOrder = 23;
> = { 1.0f, 1.0f, 1.0f};

uniform float light0Intensity : LIGHTINTENSITY 
<
	string Object = "Light 0";
	string UIName = "Light 0 Intensity"; 
	float UIMin = 0.0;
	float UIMax = 10;
	float UIStep = 0.01;
	int UIOrder = 24;
> = { 1.0f };

uniform vec3 light0Dir : DIRECTION 
< 
	string Object = "Light 0";
	string UIName = "Light 0 Direction"; 
	string Space = "World"; 
	int UIOrder = 25;
> = {100.0f, 100.0f, 100.0f}; 

// In radians
uniform float light0ConeAngle : HOTSPOT 
<
	string Object = "Light 0";
	string UIName = "Light 0 Cone Angle"; 
	float UIMin = 0;
	float UIMax = 3.14/2;
	int UIOrder = 26;
> = { 0.46f };

// In radians. Should be HIGHER then cone angle or lit area will invert
uniform float light0FallOff : FALLOFF
<
	string Object = "Light 0";
	string UIName = "Light 0 Penumbra Angle"; 
	float UIMin = 0;
	float UIMax = 3.14/2;
	int UIOrder = 27;
> = { 0.7f };

uniform float light0Atten : DECAYRATE
<
	string Object = "Light 0";
	string UIName = "Light 0 Decay";
	float UIMin = 0.0;
	float UIMax = 20.0;
	float UIStep = 0.01;
	int UIOrder = 28;
> = {0.0};

// View projection from light 0 position for shadow mapping
uniform mat4 light0ViewProj : SHADOWMAPMATRIX		
< 
	string Object = "Light 0";
	string UIWidget = "None"; 
>;

uniform texture2D light0ShadowMap : SHADOWMAP
<
    string ResourceName = "";
	string ResourceType = "2D";
	string UIWidget = "None";
	string Object = "Light 0";
	string UIName = "light0ShadowMap";
>;

uniform sampler2D light0ShadowMapSampler = sampler_state 
{
	Texture = <light0ShadowMap>;
	TEXTURE_MIN_FILTER = LINEAR; // NEAREST;
	TEXTURE_MAG_FILTER = LINEAR; // NEAREST;
	TEXTURE_WRAP_S = REPEAT;
	TEXTURE_WRAP_T = REPEAT;
	TEXTURE_WRAP_R = REPEAT;
};

#endif // _SETTINGS_OGSFH_
